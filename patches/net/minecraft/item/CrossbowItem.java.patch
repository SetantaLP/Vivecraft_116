--- a/net/minecraft/item/CrossbowItem.java
+++ b/net/minecraft/item/CrossbowItem.java
@@ -5,6 +5,11 @@
 import java.util.Random;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+import org.vivecraft.utils.math.Vector3;
+
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.client.util.ITooltipFlag;
 import net.minecraft.enchantment.EnchantmentHelper;
@@ -265,6 +270,14 @@
                 Vector3d vector3d1 = shooter.getUpVector(1.0F);
                 Quaternion quaternion = new Quaternion(new Vector3f(vector3d1), projectileAngle, true);
                 Vector3d vector3d = shooter.getLook(1.0F);
+            	//VIVE SET AIM AND SPEED
+            	ServerVivePlayer vp = NetworkHelper.vivePlayers.get(shooter.getUniqueID());
+            	if (vp !=null && vp.isVR())
+            	{ 
+            		vector3d = vp.getControllerDir(vp.activeHand);	
+            		vector3d1 = vp.getControllerVectorCustom(vp.activeHand, new Vector3(0, 1, 0));
+            	}
+            	///
                 Vector3f vector3f = new Vector3f(vector3d);
                 vector3f.transform(quaternion);
                 projectileentity.shoot((double)vector3f.getX(), (double)vector3f.getY(), (double)vector3f.getZ(), velocity, inaccuracy);
@@ -438,7 +451,7 @@
         }
     }
 
-    private static float getCharge(int useTime, ItemStack stack)
+    public static float getCharge(int useTime, ItemStack stack)
     {
         float f = (float)useTime / (float)getChargeTime(stack);
 
