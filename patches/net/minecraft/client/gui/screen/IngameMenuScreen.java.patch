--- a/net/minecraft/client/gui/screen/IngameMenuScreen.java
+++ b/net/minecraft/client/gui/screen/IngameMenuScreen.java
@@ -1,11 +1,19 @@
 package net.minecraft.client.gui.screen;
 
+import org.vivecraft.gui.settings.GuiQuickCommandsInGame;
+import org.vivecraft.settings.AutoCalibration;
+import org.vivecraft.settings.VRHotkeys;
+import org.vivecraft.settings.VRSettings;
+import org.vivecraft.utils.external.jkatvr;
+
 import com.mojang.blaze3d.matrix.MatrixStack;
 import net.minecraft.client.gui.advancements.AdvancementsScreen;
 import net.minecraft.client.gui.widget.button.Button;
+import net.minecraft.client.main.Main;
 import net.minecraft.realms.RealmsBridgeScreen;
 import net.minecraft.util.SharedConstants;
 import net.minecraft.util.Util;
+import net.minecraft.util.text.StringTextComponent;
 import net.minecraft.util.text.TranslationTextComponent;
 
 public class IngameMenuScreen extends Screen
@@ -43,29 +51,29 @@
         {
             this.minecraft.displayGuiScreen(new StatsScreen(this, this.minecraft.player.getStats()));
         }));
-        String s = SharedConstants.getVersion().isStable() ? "https://aka.ms/javafeedback?ref=game" : "https://aka.ms/snapshotfeedback?ref=game";
-        this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 98, 20, new TranslationTextComponent("menu.sendFeedback"), (button2) ->
-        {
-            this.minecraft.displayGuiScreen(new ConfirmOpenLinkScreen((open) -> {
-                if (open)
-                {
-                    Util.getOSType().openURI(s);
-                }
-
-                this.minecraft.displayGuiScreen(this);
-            }, s, true));
-        }));
-        this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 72 + -16, 98, 20, new TranslationTextComponent("menu.reportBugs"), (button2) ->
-        {
-            this.minecraft.displayGuiScreen(new ConfirmOpenLinkScreen((open) -> {
-                if (open)
-                {
-                    Util.getOSType().openURI("https://aka.ms/snapshotbugs?ref=game");
-                }
-
-                this.minecraft.displayGuiScreen(this);
-            }, "https://aka.ms/snapshotbugs?ref=game", true));
-        }));
+//        String s = SharedConstants.getVersion().isStable() ? "https://aka.ms/javafeedback?ref=game" : "https://aka.ms/snapshotfeedback?ref=game";
+//        this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 98, 20, new TranslationTextComponent("menu.sendFeedback"), (button2) ->
+//        {
+//            this.minecraft.displayGuiScreen(new ConfirmOpenLinkScreen((open) -> {
+//                if (open)
+//                {
+//                    Util.getOSType().openURI(s);
+//                }
+//
+//                this.minecraft.displayGuiScreen(this);
+//            }, s, true));
+//        }));
+//        this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 72 + -16, 98, 20, new TranslationTextComponent("menu.reportBugs"), (button2) ->
+//        {
+//            this.minecraft.displayGuiScreen(new ConfirmOpenLinkScreen((open) -> {
+//                if (open)
+//                {
+//                    Util.getOSType().openURI("https://aka.ms/snapshotbugs?ref=game");
+//                }
+//
+//                this.minecraft.displayGuiScreen(this);
+//            }, "https://aka.ms/snapshotbugs?ref=game", true));
+//        }));
         this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 96 + -16, 98, 20, new TranslationTextComponent("menu.options"), (button2) ->
         {
             this.minecraft.displayGuiScreen(new OptionsScreen(this, this.minecraft.gameSettings));
@@ -75,7 +83,7 @@
             this.minecraft.displayGuiScreen(new ShareToLanScreen(this));
         }));
         button.active = this.minecraft.isSingleplayer() && !this.minecraft.getIntegratedServer().getPublic();
-        Button button1 = this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 120 + -16, 204, 20, new TranslationTextComponent("menu.returnToMenu"), (button2) ->
+        Button button1 = this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 168 + -16, 204, 20, new TranslationTextComponent("menu.returnToMenu"), (button2) ->
         {
             boolean flag = this.minecraft.isIntegratedServerRunning();
             boolean flag1 = this.minecraft.isConnectedToRealms();
@@ -108,6 +116,68 @@
         {
             button1.setMessage(new TranslationTextComponent("menu.disconnect"));
         }
+		
+		//VIVECRAFT
+		this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 72 + -16, 98, 20, new TranslationTextComponent("vivecraft.gui.chat"), (p) ->
+		{
+			minecraft.displayGuiScreen(new ChatScreen(""));    
+		}));
+		this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 72 + -16, 98, 20, new TranslationTextComponent("vivecraft.gui.commands"), (p) ->
+		{
+			minecraft.displayGuiScreen(new GuiQuickCommandsInGame(this));
+				init();
+		})); 
+		this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 120 + -16, 49, 20, new TranslationTextComponent("vivecraft.gui.overlay"), (p) ->
+		{
+			minecraft.gameSettings.showDebugInfo = ! minecraft.gameSettings.showDebugInfo;
+				minecraft.displayGuiScreen(null);
+		})); 
+		this.addButton(new Button(this.width / 2 - 52, this.height / 4 + 120 + -16, 49, 20, new TranslationTextComponent("vivecraft.gui.profiler"), (p) ->
+		{
+			minecraft.gameSettings.showDebugProfilerChart = ! minecraft.gameSettings.showDebugProfilerChart;
+				minecraft.gameSettings.ofProfiler = minecraft.gameSettings.showDebugProfilerChart;
+				minecraft.displayGuiScreen(null);
+		})); 
+		this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 120 + -16, 98, 20, new TranslationTextComponent("vivecraft.gui.screenshot"), (p) ->
+		{
+			minecraft.displayGuiScreen(null);
+				minecraft.grabScreenShot = true;
+		}));
+		//        if(Reflector.forgeExists())
+		//        this.addButton(new Button(12, this.width / 2 - 50, this.height / 4 + 144 + -16, 98, 20, "Mod Options")
+		//        {
+		//            public void onClick(double mouseX, double mouseY)
+		//            {
+		//				Reflector.call(Reflector.call(Reflector.FMLClientHandler_instance), Reflector.FMLClientHandler_showInGameModOptions,new Object[]{this});
+		//            }
+		//        }); 
+		if (!minecraft.vrSettings.seated)
+			this.addButton(new Button(this.width / 2 - 102, this.height / 4 + 144 + -16, 98, 20, new TranslationTextComponent("vivecraft.gui.calibrateheight"), (p) ->
+			{
+					AutoCalibration.calibrateManual();
+					minecraft.vrSettings.saveOptions();
+					minecraft.displayGuiScreen(null);
+					//GuiIngameMenu.this.mc.setIngameFocus() ???????
+			}));
+		if (Main.katvr)
+			this.addButton(new Button(this.width / 2 + 106, this.height / 4 + 144 + -16, 98, 20, new TranslationTextComponent("vivecraft.gui.alignkatwalk"), (p) ->
+			{
+					jkatvr.resetYaw(minecraft.vrPlayer.vrdata_room_pre.hmd.getYaw());
+					minecraft.displayGuiScreen(null);
+					//GuiIngameMenu.this.mc.setIngameFocus(); ????
+			}));
+		if (!minecraft.vrSettings.seated || (minecraft.vrSettings.displayMirrorMode == VRSettings.MIRROR_THIRD_PERSON || minecraft.vrSettings.displayMirrorMode == VRSettings.MIRROR_MIXED_REALITY))
+			this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 144 + -16, 98, 20, new TranslationTextComponent("vivecraft.gui.movethirdpersoncam"), (p) ->
+			{
+				if (!VRHotkeys.isMovingThirdPersonCam()) {
+					VRHotkeys.startMovingThirdPersonCam(1, VRHotkeys.Triggerer.MENUBUTTON);
+				} else if (VRHotkeys.getMovingThirdPersonCamTriggerer() == VRHotkeys.Triggerer.MENUBUTTON) {
+					VRHotkeys.stopMovingThirdPersonCam();
+					minecraft.vrSettings.saveOptions();
+				}
+			}));
+		//
+        
     }
 
     public void tick()
