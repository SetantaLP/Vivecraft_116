--- a/net/minecraft/client/main/Main.java
+++ b/net/minecraft/client/main/Main.java
@@ -39,7 +39,10 @@
 public class Main
 {
     private static final Logger LOGGER = LogManager.getLogger();
-
+	public static boolean kiosk;
+	public static boolean viewonly;
+	public static boolean katvr;
+	public static boolean infinadeck;
     public static void main(String[] p_main_0_)
     {
         OptionParser optionparser = new OptionParser();
@@ -47,6 +50,11 @@
         optionparser.accepts("demo");
         optionparser.accepts("disableMultiplayer");
         optionparser.accepts("disableChat");
+        optionparser.accepts("demo");
+        optionparser.accepts("kiosk");
+        optionparser.accepts("viewonly");
+        optionparser.accepts("katvr");
+        optionparser.accepts("infinadeck");
         optionparser.accepts("fullscreen");
         optionparser.accepts("checkGlErrors");
         OptionSpec<String> optionspec = optionparser.accepts("server").withRequiredArg();
@@ -63,8 +71,8 @@
         OptionSpec<String> optionspec11 = optionparser.accepts("uuid").withRequiredArg();
         OptionSpec<String> optionspec12 = optionparser.accepts("accessToken").withRequiredArg().required();
         OptionSpec<String> optionspec13 = optionparser.accepts("version").withRequiredArg().required();
-        OptionSpec<Integer> optionspec14 = optionparser.accepts("width").withRequiredArg().ofType(Integer.class).defaultsTo(854);
-        OptionSpec<Integer> optionspec15 = optionparser.accepts("height").withRequiredArg().ofType(Integer.class).defaultsTo(480);
+        OptionSpec<Integer> optionspec14 = optionparser.accepts("width").withRequiredArg().ofType(Integer.class).defaultsTo(1280);
+        OptionSpec<Integer> optionspec15 = optionparser.accepts("height").withRequiredArg().ofType(Integer.class).defaultsTo(720);
         OptionSpec<Integer> optionspec16 = optionparser.accepts("fullscreenWidth").withRequiredArg().ofType(Integer.class);
         OptionSpec<Integer> optionspec17 = optionparser.accepts("fullscreenHeight").withRequiredArg().ofType(Integer.class);
         OptionSpec<String> optionspec18 = optionparser.accepts("userProperties").withRequiredArg().defaultsTo("{}");
@@ -115,6 +123,17 @@
         OptionalInt optionalint1 = toOptionalInt(getValue(optionset, optionspec17));
         boolean flag = optionset.has("fullscreen");
         boolean flag1 = optionset.has("demo");
+        //Vivecraft
+        kiosk = optionset.has("kiosk");
+    	if(kiosk) System.out.println("Setting kiosk");
+        if (kiosk) {
+        	viewonly = optionset.has("viewonly");
+        	if(viewonly) 
+        		System.out.println("Setting viewonly");
+        }
+        katvr = optionset.has("katvr");
+        infinadeck = optionset.has("infinadeck");
+        //
         boolean flag2 = optionset.has("disableMultiplayer");
         boolean flag3 = optionset.has("disableChat");
         String s3 = getValue(optionset, optionspec13);
@@ -172,6 +191,7 @@
         }
         catch (Throwable throwable1)
         {
+            LOGGER.warn("Failed to something: ", (Throwable)throwable1);
             CrashReport crashreport = CrashReport.makeCrashReport(throwable1, "Initializing game");
             crashreport.makeCategory("Initialization");
             Minecraft.fillCrashReport((LanguageManager)null, gameconfiguration.gameInfo.version, (GameSettings)null, crashreport);
@@ -277,6 +297,7 @@
 
     static
     {
-        System.setProperty("java.awt.headless", "true");
+        // wtf mojang
+        //System.setProperty("java.awt.headless", "true");
     }
 }
