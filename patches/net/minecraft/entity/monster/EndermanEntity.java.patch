--- a/net/minecraft/entity/monster/EndermanEntity.java
+++ b/net/minecraft/entity/monster/EndermanEntity.java
@@ -6,7 +6,12 @@
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+
 import net.minecraft.block.Block;
+import net.minecraft.block.BlockRenderType;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
 import net.minecraft.entity.Entity;
@@ -52,10 +57,12 @@
 import net.minecraft.util.math.BlockRayTraceResult;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.RayTraceContext;
+import net.minecraft.util.math.RayTraceResult.Type;
 import net.minecraft.util.math.vector.Vector3d;
 import net.minecraft.world.GameRules;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import net.optifine.reflect.Reflector;
 
 public class EndermanEntity extends MonsterEntity implements IAngerable
 {
@@ -127,6 +134,9 @@
                 modifiableattributeinstance.applyNonPersistentModifier(ATTACKING_SPEED_BOOST);
             }
         }
+        //Forge move down here
+        super.setAttackTarget(entitylivingbaseIn);
+        //
     }
 
     protected void registerData()
@@ -226,22 +236,42 @@
     private boolean shouldAttackPlayer(PlayerEntity player)
     {
         ItemStack itemstack = player.inventory.armorInventory.get(3);
-
-        if (itemstack.getItem() == Blocks.CARVED_PUMPKIN.asItem())
+//Forge
+        boolean mask = Reflector.callBoolean(itemstack, Reflector.ForgeItemStack_isEnderMask, player, this);
+        if (mask || itemstack.getItem() == Blocks.CARVED_PUMPKIN.asItem())
+        //
         {
             return false;
         }
         else
         {
+        	//VIVE FIX
             Vector3d vector3d = player.getLook(1.0F).normalize();
             Vector3d vector3d1 = new Vector3d(this.getPosX() - player.getPosX(), this.getPosYEye() - player.getPosYEye(), this.getPosZ() - player.getPosZ());
-            double d0 = vector3d1.length();
-            vector3d1 = vector3d1.normalize();
-            double d1 = vector3d.dotProduct(vector3d1);
-            return d1 > 1.0D - 0.025D / d0 ? player.canEntityBeSeen(this) : false;
+            
+        	ServerVivePlayer vp = NetworkHelper.vivePlayers.get(player.getUniqueID());
+        	boolean vr = vp !=null && vp.isVR();
+        	if (vr)
+        	{
+        		vector3d = vp.getHMDDir();
+        		Vector3d hmdpos = vp.getHMDPos(player);
+        		vector3d1 = new Vector3d(this.getPosX() - hmdpos.x, this.getBoundingBox().minY + (double)this.getEyeHeight() - hmdpos.y, this.getPosZ() - hmdpos.z);
+        	}
+        	//          
+        	double d0 = vector3d1.length();
+        	vector3d1 = vector3d1.normalize();
+        	double d1 = vector3d.dotProduct(vector3d1);
+        	//Vivecraft
+        	return d1 > 1.0D - 0.025D / d0 ? (vr ? canSee(vp.getHMDPos(player), this.getEyePosition(1)): player.canEntityBeSeen(this)) : false;
+        	//
         }
     }
-
+    
+    private boolean canSee(Vector3d source, Vector3d Target)
+    {
+        return this.world.rayTraceBlocks(new RayTraceContext(source, Target, RayTraceContext.BlockMode.COLLIDER, RayTraceContext.FluidMode.NONE, this)).getType() == Type.MISS;
+    }
+    
     protected float getStandingEyeHeight(Pose poseIn, EntitySize sizeIn)
     {
         return 2.55F;
@@ -342,6 +372,16 @@
 
         if (flag && !flag1)
         {
+        	//Forge
+            Object event = Reflector.newInstance(Reflector.EnderTeleportEvent_Constructor, this, x, y, z, 0);
+            if(Reflector.postForgeBusEvent(event)) return false;
+            if(event != null) {
+            	x= Reflector.callDouble(event, Reflector.EnderTeleportEvent_getTargetX);
+            	y= Reflector.callDouble(event, Reflector.EnderTeleportEvent_getTargetY);
+            	z= Reflector.callDouble(event, Reflector.EnderTeleportEvent_getTargetZ);           	
+            }
+            //
+            
             boolean flag2 = this.attemptTeleport(x, y, z, true);
 
             if (flag2 && !this.isSilent())
@@ -558,11 +598,16 @@
 
         public boolean shouldExecute()
         {
+        	boolean flag = !this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING);
+        	//Forge
+        	if(Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+        		flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.world, this.enderman);
+        	//
             if (this.enderman.getHeldBlockState() == null)
             {
                 return false;
             }
-            else if (!this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING))
+            else if (flag)
             {
                 return false;
             }
@@ -584,8 +629,11 @@
             BlockPos blockpos1 = blockpos.down();
             BlockState blockstate1 = world.getBlockState(blockpos1);
             BlockState blockstate2 = this.enderman.getHeldBlockState();
-
-            if (blockstate2 != null)
+            //Forge
+            Object snapshot = Reflector.call(Reflector.BlockSnapshot_create, world.getDimensionKey(), world, blockpos);
+            boolean flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onBlockPlace, enderman, snapshot, net.minecraft.util.Direction.UP);
+            //
+            if (blockstate2 != null && !flag)
             {
                 blockstate2 = Block.getValidBlockForPosition(blockstate2, this.enderman.world, blockpos);
 
@@ -651,11 +699,16 @@
 
         public boolean shouldExecute()
         {
+        	boolean flag = !this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING);
+        	//Forge
+        	if(Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+        		flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.world, this.enderman);
+        	//
             if (this.enderman.getHeldBlockState() != null)
             {
                 return false;
             }
-            else if (!this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING))
+            else if (!flag)
             {
                 return false;
             }
