--- a/net/minecraft/entity/projectile/ThrowableEntity.java
+++ b/net/minecraft/entity/projectile/ThrowableEntity.java
@@ -1,9 +1,13 @@
 package net.minecraft.entity.projectile;
 
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.LivingEntity;
+import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.network.IPacket;
 import net.minecraft.network.play.server.SSpawnObjectPacket;
 import net.minecraft.particles.ParticleTypes;
@@ -14,6 +18,7 @@
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.util.math.vector.Vector3d;
 import net.minecraft.world.World;
+import net.optifine.reflect.Reflector;
 
 public abstract class ThrowableEntity extends ProjectileEntity
 {
@@ -30,8 +35,17 @@
 
     protected ThrowableEntity(EntityType <? extends ThrowableEntity > type, LivingEntity livingEntityIn, World worldIn)
     {
-        this(type, livingEntityIn.getPosX(), livingEntityIn.getPosYEye() - (double)0.1F, livingEntityIn.getPosZ(), worldIn);
-        this.setShooter(livingEntityIn);
+    	this(type, livingEntityIn.getPosX(), livingEntityIn.getPosYEye() - (double)0.1F, livingEntityIn.getPosZ(), worldIn);
+    	this.setShooter(livingEntityIn);
+    	//VIVE SET SPAWNPOS
+    	ServerVivePlayer vp = NetworkHelper.vivePlayers.get(livingEntityIn.getUniqueID());
+    	if (vp !=null && vp.isVR())
+    	{
+    		Vector3d aimSource = vp.getControllerPos(vp.activeHand, (PlayerEntity) livingEntityIn);
+    		Vector3d aimDir = vp.getControllerDir(vp.activeHand).scale(0.6f);
+    		this.setPosition(aimSource.x + aimDir.x ,aimSource.y + aimDir.y ,aimSource.z+aimDir.z );
+    	} 
+    	///
     }
 
     /**
@@ -84,6 +98,11 @@
 
         if (raytraceresult.getType() != RayTraceResult.Type.MISS && !flag)
         {
+        	//Forge
+        	if(Reflector.ForgeEventFactory_onProjectileImpactT.exists())
+        		flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onProjectileImpactT, this, raytraceresult);
+        	if(!flag)
+        	//
             this.onImpact(raytraceresult);
         }
 
